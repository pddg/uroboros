---
name: Test
on: [push, pull_request]

env:
  release_python_version: 3.8
  reviewdog_version: 0.10.0

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.release_python_version }}
      - name: Install pipenv
        run: |
          python -m pip install -U pip setuptools wheel
          pip install pipenv
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
              ~/.cache/pip
              .venv
          key: ${{ runner.os }}-pip-${{ env.release_python_version }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.release_python_version }}-
      - name: Install dependencies
        run: |
          pipenv install --dev
          pipenv run pip install -U zipp
        env:
          PIP_EXISTS_ACTION: i
      - name: Restore reviewdog if available
        id: reviewdogcache
        uses: actions/cache@v1
        with:
          path: ~/bin
          key: ${{ runner.os }}-reviewdog-${{ env.reviewdog_version }}
          restore-keys: |
            ${{ runner.os }}-reviewdog-${{ env.reviewdog_version }}
      - name: Setup reviewdog
        if: steps.reviewdogcache.outputs.cache-hit != 'true'
        run: |
          mkdir -p $HOME/bin && curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b $HOME/bin v${{ env.reviewdog_version }}
      - name: Run lint
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -o pipefail
          reporter=$(if [[ "${{ github.event_name }}" ==  "pull_request" ]]; then echo github-pr-review; else echo github-check; fi)
          pipenv run lint | $HOME/bin/reviewdog -f=pep8 -name="lint" -reporter=$reporter
  test:
    needs: lint
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python_version:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install pipenv
        run: |
          python -m pip install -U pip setuptools wheel
      - if: startsWith(runner.os, 'Linux')
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            .venv
            .tox
          key: ${{ runner.os }}-pip-${{ matrix.python_version }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python_version }}-
      - if: startsWith(runner.os, 'macOS')
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ matrix.python_version }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python_version }}-
      - if: startsWith(runner.os, 'Windows')
        uses: actions/cache@v2
        with:
          path: |
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ matrix.python_version }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python_version }}-
      - name: Install dependencies
        run: |
          pip install -r requirements.dev.txt
        env:
          PIP_EXISTS_ACTION: i
      - name: Run test
        run: |
          pytest -v .
